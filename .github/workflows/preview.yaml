name: GitHub Actions Vercel Preview Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - dev
  push:
    paths:
      - '**/*'

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set unique PR identifier
        run: echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: |
          deployment_url=$(vercel deploy --json --token=${{ secrets.VERCEL_TOKEN }} --name=pr-${{ github.event.number }} | jq -r '.url')
          echo "deployment_url=${deployment_url}" >> $GITHUB_ENV
      - name: Comment on PR with Deployment URL
        run: |
          comment_body="Preview deployment: $deployment_url"
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"body": "'"$comment_body"'"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"

  Cleanup-Preview:
    runs-on: ubuntu-latest
    needs: [Deploy-Preview]
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    steps:
      - name: Delete Vercel Preview Deployment
        run: vercel remove --token=${{ secrets.VERCEL_TOKEN }} --yes --name=pr-${{ github.event.number }}

  Redeploy-Preview:
    runs-on: ubuntu-latest
    needs: [Deploy-Preview]
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/heads/') &&
      github.event.pull_request &&
      github.event.pull_request.base.ref == 'dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --name=pr-${{ github.event.number }}
