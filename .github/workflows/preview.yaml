name: GitHub Actions Vercel Preview Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches-ignore:
      - 'dev'
      - 'main'

jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '#deploy') }}
    outputs:
      deployment_url: ${{ steps.deployment_url.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: |
          deployment_info=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }})
          deployment_url=$(echo "$deployment_info")
          echo "deployment_url=${deployment_url}" >> $GITHUB_ENV
          echo "Deployment URL: $deployment_url"

      - id: deployment_url
        run: echo "value=${{ env.deployment_url }}" >> $GITHUB_OUTPUT

  Comment-PR:
    runs-on: ubuntu-latest
    needs: [Deploy-Preview]
    steps:
      - name: Comment on PR with Deployment URL
        run: |
          comment_body="{\"body\": \"Preview deployment: ${{ needs.Deploy-Preview.outputs.deployment_url }}\"}"
          echo "$comment_body" > comment.json
          cat comment.json
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "@comment.json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"

  Cleanup-Preview:
    runs-on: ubuntu-latest
    needs: [Deploy-Preview]
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
    steps:
      - name: Delete Vercel Preview Deployment
        run: vercel remove $deployment_url --confirm --token=${{ secrets.VERCEL_TOKEN }}
